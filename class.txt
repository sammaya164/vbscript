3:I[4707,[],""]
5:I[6423,[],""]
6:I[76,["185","static/chunks/app/layout-a24cc29d45a5ce04.js"],"ThemeSwitcher"]
4:["slug","class","d"]
7:{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"}
8:{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"}
9:{"display":"inline-block"}
a:{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0}
0:["AMkc6tatsjp8p4K3-VcRn",[[["",{"children":["(blog)",{"children":[["slug","class","d"],{"children":["__PAGE__?{\"slug\":\"class\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["(blog)",{"children":[["slug","class","d"],{"children":["__PAGE__",{},[["$L1","$L2",[["$","link","0",{"rel":"stylesheet","href":"/vbscript/_next/static/css/b6dd24d3fdd5bfe9.css","precedence":"next","crossOrigin":"$undefined"}]]],null],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(blog)","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/vbscript/_next/static/css/ce90c4206395b4a9.css","precedence":"next","crossOrigin":"$undefined"}]],["$","main",null,{"children":["$","div",null,{"className":"p-1 md:p-8","children":["$","div",null,{"className":"lg:flex py-2","children":[["$","div",null,{"className":"sidebar overflow-x-visible lg:border-r lg:overflow-y-scroll py-4 min-w-80 lg:w-1/5","children":["$","nav",null,{"children":[["$","input",null,{"id":"ac-toc","type":"checkbox","className":"peer/toc hidden"}],["$","label",null,{"htmlFor":"ac-toc","className":"   accodiontoc mb-1   relative before:absolute after:absolute    z-10 after:z-11 before:z-12   peer-checked/toc:hover:after:-rotate-90   peer-checked/toc:bg-[#333]   peer-checked/toc:text-white   peer-checked/toc:before:bg-white   peer-checked/toc:after:bg-white   after:duration-300   py-2 pl-4 pr-10    text-xs font-bold   border border-solid rounded   border-white hover:border-[#bdc1c4]   inline-block   text-[#7a8288] hover:text-white   hover:bg-[#333]   before:content-[''] after:content-['']   before:w-2.5 before:h-0.5 after:w-0.5 after:h-2.5   before:right-4 before:top-4 after:right-5  after:top-3   before:bg-[#7a8288] after:bg-[#7a8288]   hover:after:bg-white hover:before:bg-white   lg:hidden   ","children":"メニュー"}],["$","div",null,{"className":"hidden lg:block peer-checked/toc:block mt-8 lg:mt-4","children":["$","section",null,{"children":[["$","div",null,{"children":["$","h3",null,{"className":"text-lg mb-3 leading-snug","children":["$","a",null,{"href":"/vbscript/helloworld","className":"hover:underline","children":"Hello, World!と表示させる"}]}]}],["$","div",null,{"children":["$","h3",null,{"className":"text-lg mb-3 leading-snug","children":["$","a",null,{"href":"/vbscript/msgbox","className":"hover:underline","children":"MsgBox関数"}]}]}],["$","div",null,{"children":["$","h3",null,{"className":"text-lg mb-3 leading-snug","children":["$","a",null,{"href":"/vbscript/inputbox","className":"hover:underline","children":"InputBox関数"}]}]}],["$","div",null,{"children":["$","h3",null,{"className":"text-lg mb-3 leading-snug","children":["$","a",null,{"href":"/vbscript/array","className":"hover:underline","children":"配列(1) 配列の作り方"}]}]}],["$","div",null,{"children":["$","h3",null,{"className":"text-lg mb-3 leading-snug","children":["$","a",null,{"href":"/vbscript/filter","className":"hover:underline","children":"配列(2) 配列の操作"}]}]}],["$","div",null,{"children":["$","h3",null,{"className":"text-lg mb-3 leading-snug","children":["$","a",null,{"href":"/vbscript/fso","className":"hover:underline","children":"FileSystemObjectオブジェクト"}]}]}],["$","div",null,{"children":["$","h3",null,{"className":"text-lg mb-3 leading-snug","children":["$","a",null,{"href":"/vbscript/path","className":"hover:underline","children":"ファイル名、パス名を取得する"}]}]}],["$","div",null,{"children":["$","h3",null,{"className":"text-lg mb-3 leading-snug","children":["$","a",null,{"href":"/vbscript/file","className":"hover:underline","children":"File、Folder、Drive、TextStreamオブジェクト"}]}]}],["$","div",null,{"children":["$","h3",null,{"className":"text-lg mb-3 leading-snug","children":["$","a",null,{"href":"/vbscript/rename","className":"hover:underline","children":"ファイル名の頭に日付を加える"}]}]}],["$","div",null,{"children":["$","h3",null,{"className":"text-lg mb-3 leading-snug","children":["$","a",null,{"href":"/vbscript/filelist","className":"hover:underline","children":"ファイル一覧を取得する"}]}]}],["$","div",null,{"children":["$","h3",null,{"className":"text-lg mb-3 leading-snug","children":["$","a",null,{"href":"/vbscript/mdb1","className":"hover:underline","children":"Access形式データベースへの接続（1）OLEDBプロバイダー"}]}]}],["$","div",null,{"children":["$","h3",null,{"className":"text-lg mb-3 leading-snug","children":["$","a",null,{"href":"/vbscript/mdb2","className":"hover:underline","children":"Access形式データベースへの接続（2）DBファイルとテーブルの追加"}]}]}],["$","div",null,{"children":["$","h3",null,{"className":"text-lg mb-3 leading-snug","children":["$","a",null,{"href":"/vbscript/mdb3","className":"hover:underline","children":"Access形式データベースへの接続（3）列の追加"}]}]}],["$","div",null,{"children":["$","h3",null,{"className":"text-lg mb-3 leading-snug","children":["$","a",null,{"href":"/vbscript/mdb4","className":"hover:underline","children":"Access形式データベースへの接続（4）レコードの登録と削除"}]}]}],["$","div",null,{"children":["$","h3",null,{"className":"text-lg mb-3 leading-snug","children":["$","a",null,{"href":"/vbscript/adox","className":"hover:underline","children":"ADOとADOXのオブジェクト"}]}]}],["$","div",null,{"children":["$","h3",null,{"className":"text-lg mb-3 leading-snug","children":["$","a",null,{"href":"/vbscript/mnist","className":"hover:underline","children":"バイナリファイルを読む"}]}]}],["$","div",null,{"children":["$","h3",null,{"className":"text-lg mb-3 leading-snug","children":["$","a",null,{"href":"/vbscript/class","className":"hover:underline","children":"クラスを自作する"}]}]}],["$","div",null,{"children":["$","h3",null,{"className":"text-lg mb-3 leading-snug","children":["$","a",null,{"href":"/vbscript/calender1","className":"hover:underline","children":"カレンダー計算（1）日付からMJDへの変換"}]}]}],["$","div",null,{"children":["$","h3",null,{"className":"text-lg mb-3 leading-snug","children":["$","a",null,{"href":"/vbscript/calender2","className":"hover:underline","children":"カレンダー計算（2）MJDから日付への変換"}]}]}],["$","div",null,{"children":["$","h3",null,{"className":"text-lg mb-3 leading-snug","children":["$","a",null,{"href":"/vbscript/calender3","className":"hover:underline","children":"カレンダー計算（3）万年カレンダー"}]}]}],["$","div",null,{"children":["$","h3",null,{"className":"text-lg mb-3 leading-snug","children":["$","a",null,{"href":"/vbscript/encoder","className":"hover:underline","children":"VBScriptの暗号化"}]}]}]]}]}]]}]}],["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(blog)","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]]}]}]}]],null],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/vbscript/_next/static/css/741e77bcaef201b5.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","link",null,{"rel":"apple-touch-icon","sizes":"180x180","href":"/vbscript/favicon/apple-touch-icon.png"}],["$","link",null,{"rel":"icon","type":"image/png","sizes":"32x32","href":"/vbscript/favicon/favicon-32x32.png"}],["$","link",null,{"rel":"icon","type":"image/png","sizes":"16x16","href":"/vbscript/favicon/favicon-16x16.png"}],["$","link",null,{"rel":"manifest","href":"/vbscript/favicon/site.webmanifest"}],["$","link",null,{"rel":"mask-icon","href":"/vbscript/favicon/safari-pinned-tab.svg","color":"#000000"}],["$","link",null,{"rel":"shortcut icon","href":"/vbscript/favicon/favicon.ico"}],["$","meta",null,{"name":"msapplication-TileColor","content":"#000000"}],["$","meta",null,{"name":"msapplication-config","content":"/vbscript/favicon/browserconfig.xml"}],["$","meta",null,{"name":"theme-color","content":"#000"}],["$","link",null,{"rel":"alternate","type":"application/rss+xml","href":"/vbscript/feed.xml"}]]}],["$","body",null,{"className":"__className_4eacb2 dark:bg-slate-900 dark:text-slate-400","children":[["$","$L6",null,{}],["$","header",null,{"className":"border-b border-neutral-200 dark:bg-stars","children":["$","div",null,{"className":"container px-8","children":["$","div",null,{"className":"py-16 flex flex-col lg:flex-row items-center","children":[["$","h2",null,{"className":"text-2xl lg:text-4xl font-bold tracking-tight lg:tracking-tighter leading-tight lg:w-1/3","children":[["$","a",null,{"href":"/vbscript","className":"hover:underline","children":"VBScriptさんま屋"}],"."]}],["$","h4",null,{"className":"text-center text-lg","children":"VBScriptの個人的なメモです (´・ω・`)"}]]}]}]}],["$","div",null,{"className":"min-h-1/2","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$7","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$8","children":"404"}],["$","div",null,{"style":"$9","children":["$","h2",null,{"style":"$a","children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]}],["$","footer",null,{"className":"bg-neutral-50 border-t border-neutral-200 dark:bg-slate-800","children":["$","div",null,{"className":"container px-8","children":["$","div",null,{"className":"py-28 flex flex-col lg:flex-row items-center","children":[["$","h3",null,{"className":"text-4xl lg:text-[2.5rem] font-bold tracking-tighter leading-tight text-center lg:text-left mb-10 lg:mb-0 lg:pr-4 lg:w-1/2","children":"Statically Generated with Next.js."}],["$","div",null,{"className":"flex flex-col lg:flex-row justify-center items-center lg:pl-4 lg:w-1/2","children":[["$","a",null,{"href":"https://nextjs.org/docs/app/building-your-application/routing/layouts-and-templates","className":"mx-3 bg-black hover:bg-white hover:text-black border border-black text-white font-bold py-3 px-12 lg:px-8 duration-200 transition-colors mb-6 lg:mb-0","children":"Read Documentation"}],["$","a",null,{"href":"https://github.com/sammaya164/vbscript","className":"mx-3 font-bold hover:underline","children":"View on GitHub"}]]}]]}]}]}]]}]]}]],null],null],["$Lb",null]]]]
c:T39c0,<nav class="toc"><ol class="toc-level toc-level-1"><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#概要">概要</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#クラスの使用例">クラスの使用例</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#デモを実行するjavascript">デモを実行する(JavaScript)</a></li></ol></nav><h2 id="概要">概要</h2>
<p>クラスの使用例。勇者vs.魔王。<br>
どちらかが倒れるまで戦闘が続きます。</p>
<h2 id="クラスの使用例">クラスの使用例</h2>
<pre><code class="hljs language-vbs"><span class="hljs-comment">'クラス宣言</span>
<span class="hljs-keyword">Class</span> C_Player
  <span class="hljs-comment">'ここでは変数宣言にDimは使えない</span>

  <span class="hljs-comment">'パブリックなメンバを宣言(プロパティ)</span>
  <span class="hljs-comment">'(クラスの外部からアクセス可能)</span>
  <span class="hljs-keyword">Public</span> Name <span class="hljs-comment">'名前</span>

  <span class="hljs-comment">'プライベートなメンバを宣言</span>
  <span class="hljs-comment">'(クラスの外部からアクセス不可能)</span>
  <span class="hljs-keyword">Private</span> m_life     <span class="hljs-comment">'ライフ</span>
  <span class="hljs-keyword">Private</span> m_max      <span class="hljs-comment">'ライフ最大値</span>
  <span class="hljs-keyword">Private</span> m_strength <span class="hljs-comment">'攻撃力</span>
  <span class="hljs-keyword">Private</span> m_enemy    <span class="hljs-comment">'敵オブジェクト</span>

  <span class="hljs-comment">'Strengthプロパティへ値の代入を可能にする</span>
  <span class="hljs-comment">'(クラスの外部から代入可能)</span>
  <span class="hljs-keyword">Public</span> <span class="hljs-keyword">Property</span> <span class="hljs-keyword">Let</span> Strength(val)
    m_strength = val
    m_life = <span class="hljs-built_in">Int</span>(<span class="hljs-number">100000</span> / val)
    m_max = m_life
  <span class="hljs-keyword">End</span> <span class="hljs-keyword">Property</span>

  <span class="hljs-comment">'Strengthプロパティの値を取得可能にする</span>
  <span class="hljs-comment">'(クラスの外部から取得可能)</span>
  <span class="hljs-keyword">Public</span> <span class="hljs-keyword">Property</span> <span class="hljs-keyword">Get</span> Strength()
    Strength = m_strength
  <span class="hljs-keyword">End</span> <span class="hljs-keyword">Property</span>

  <span class="hljs-comment">'Enemyプロパティへオブジェクトの代入を可能にする</span>
  <span class="hljs-comment">'(クラスの外部から代入可能)</span>
  <span class="hljs-keyword">Public</span> <span class="hljs-keyword">Property</span> <span class="hljs-keyword">Set</span> Enemy(obj)
    <span class="hljs-keyword">Set</span> m_enemy = obj
  <span class="hljs-keyword">End</span> <span class="hljs-keyword">Property</span>

  <span class="hljs-keyword">Private</span> <span class="hljs-keyword">Sub</span> <span class="hljs-keyword">Class_Initialize</span>()
    <span class="hljs-comment">'インスタンス作成時に行いたい処理を記載   </span>
  <span class="hljs-keyword">End</span> <span class="hljs-keyword">Sub</span>

  <span class="hljs-keyword">Private</span> <span class="hljs-keyword">Sub</span> <span class="hljs-keyword">Class_Terminate</span>()
    <span class="hljs-comment">'インスタンス破棄時に行いたい処理を記載</span>
  <span class="hljs-keyword">End</span> <span class="hljs-keyword">Sub</span>

  <span class="hljs-comment">'パブリックなSubプロシージャ(メソッド)</span>
  <span class="hljs-comment">'(クラスの外部からアクセス可能)</span>
  <span class="hljs-keyword">Public</span> <span class="hljs-keyword">Sub</span> Atack()
    <span class="hljs-comment">'プロシージャ内ならDimを使える</span>
    <span class="hljs-keyword">Dim</span> buf
    buf = <span class="hljs-built_in">Int</span>(m_strength * <span class="hljs-built_in">Rnd</span>())
    Msgbox Name &#x26; <span class="hljs-string">"の攻撃！"</span>
    m_enemy.Damage(buf)
  <span class="hljs-keyword">End</span> <span class="hljs-keyword">Sub</span>

  <span class="hljs-comment">'パブリックなFunctionプロシージャ(メソッド)</span>
  <span class="hljs-comment">'(クラスの外部からアクセス可能)</span>
  <span class="hljs-keyword">Public</span> <span class="hljs-keyword">Function</span> Damage(val)
    m_life = m_life - val
    <span class="hljs-keyword">If</span> m_life &#x3C; <span class="hljs-number">0</span> <span class="hljs-keyword">Then</span> m_life = <span class="hljs-number">0</span>
    Msgbox Name &#x26; <span class="hljs-string">"は"</span> &#x26; val &#x26; <span class="hljs-string">"のダメージを受けた"</span> _
      &#x26; vbCr &#x26; <span class="hljs-string">"(´・ω・) "</span> &#x26; m_life &#x26; <span class="hljs-string">"/"</span> &#x26; m_max
    <span class="hljs-keyword">If</span> HasDead <span class="hljs-keyword">Then</span>
      Msgbox Name &#x26; <span class="hljs-string">"は倒れた！"</span> &#x26; vbCr &#x26; <span class="hljs-string">"( -ω-) ｽﾔｧ"</span>
    <span class="hljs-keyword">Else</span>
      <span class="hljs-keyword">Call</span> Atack()
    <span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span>
  <span class="hljs-keyword">End</span> <span class="hljs-keyword">Function</span>

  <span class="hljs-comment">'プライベートなFunctionプロシージャ</span>
  <span class="hljs-comment">'(クラスの外部からアクセス不可能)</span>
  <span class="hljs-keyword">Private</span> <span class="hljs-keyword">Function</span> HasDead()
    <span class="hljs-keyword">If</span> m_life > <span class="hljs-number">0</span> <span class="hljs-keyword">Then</span>
      HasDead = <span class="hljs-literal">False</span>
    <span class="hljs-keyword">Else</span>
      HasDead = <span class="hljs-literal">True</span>
    <span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span>
  <span class="hljs-keyword">End</span> <span class="hljs-keyword">Function</span>

<span class="hljs-keyword">End</span> <span class="hljs-keyword">Class</span>


<span class="hljs-comment">'変数宣言</span>
<span class="hljs-keyword">Dim</span> P1
<span class="hljs-keyword">Dim</span> P2

<span class="hljs-comment">'インスタンスを作成</span>
<span class="hljs-keyword">Set</span> P1 = <span class="hljs-keyword">New</span> C_Player
<span class="hljs-keyword">Set</span> P2 = <span class="hljs-keyword">New</span> C_Player

<span class="hljs-comment">'プロパティに値を代入</span>
P1.Name = <span class="hljs-string">"勇者"</span>
P1.Strength = <span class="hljs-number">100</span>  <span class="hljs-comment">'攻撃力100、HP1000</span>
P2.Name = <span class="hljs-string">"魔王"</span>
P2.Strength = <span class="hljs-number">1000</span> <span class="hljs-comment">'攻撃力1000、HP100</span>

<span class="hljs-comment">'プロパティにオブジェクトを代入</span>
<span class="hljs-keyword">Set</span> P1.Enemy = P2
<span class="hljs-keyword">Set</span> P2.Enemy = P1

<span class="hljs-comment">'乱数ジェネレータを初期化</span>
<span class="hljs-keyword">Call</span> <span class="hljs-keyword">Randomize</span>()

<span class="hljs-comment">'戦闘開始</span>
<span class="hljs-keyword">Call</span> P1.Atack()

<span class="hljs-comment">'インスタンスを破棄</span>
<span class="hljs-keyword">Set</span> P1 = <span class="hljs-literal">Nothing</span>
<span class="hljs-keyword">Set</span> P2 = <span class="hljs-literal">Nothing</span>
</code></pre>
<p>P1(勇者)のAtackメソッドで戦闘を開始。</p>
<p>Atackメソッド内でP2(魔王)のDamageメソッドを呼び出す。<br>
Damageメソッド内でP2(魔王)のAtackメソッドを呼び出す。<br>
Atackメソッド内でP1(勇者)のDamageメソッドを呼び出す。<br>
Damageメソッド内でP1(勇者)のAtackメソッドを呼び出す。<br>
以上の繰り返し。</p>
<p>どちらかのHPが0になれば終了します。</p>
<h2 id="デモを実行するjavascript">デモを実行する(JavaScript)</h2>
<p>同様のプログラムをJavaScriptで作ってみました。</p>
<input type="button" value="ここをクリック!" style="background:green;color:white;padding:10px;border-radius:12px;" onclick="maou();">
<p></p>
<p>コードはこんなです。</p>
<pre><code class="hljs language-js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Player</span>{
  <span class="hljs-title function_">constructor</span>(<span class="hljs-params">name, strength</span>){
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = name;
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">strength</span> = strength;
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">lifeMax</span> = <span class="hljs-number">100000</span>/strength;
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">life</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">lifeMax</span>;
  }

  <span class="hljs-title function_">damage</span>(<span class="hljs-params">val</span>){
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">life</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">life</span> - val;
    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">life</span> &#x3C; <span class="hljs-number">0</span>) {
      <span class="hljs-variable language_">this</span>.<span class="hljs-property">life</span> = <span class="hljs-number">0</span>;
    }
    <span class="hljs-title function_">alert</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> + <span class="hljs-string">'は'</span> + val + <span class="hljs-string">'のダメージを受けた\n(´・ω・) '</span>
     + <span class="hljs-variable language_">this</span>.<span class="hljs-property">life</span> + <span class="hljs-string">'/'</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">lifeMax</span>);
    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">life</span> == <span class="hljs-number">0</span>) {
      <span class="hljs-title function_">alert</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> + <span class="hljs-string">'は倒れた！\n( -ω-) ｽﾔｧ'</span>);
    } <span class="hljs-keyword">else</span> {
      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">atack</span>();
    }
  }

  <span class="hljs-title function_">atack</span>(<span class="hljs-params"></span>){
    <span class="hljs-title function_">alert</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> + <span class="hljs-string">'の攻撃！'</span>)
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">enemy</span>.<span class="hljs-title function_">damage</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * <span class="hljs-variable language_">this</span>.<span class="hljs-property">strength</span>));
  }

  <span class="hljs-keyword">get</span> <span class="hljs-title function_">enemy</span>(){
    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">_enemy</span>;
  }

  <span class="hljs-keyword">set</span> <span class="hljs-title function_">enemy</span>(<span class="hljs-params">obj</span>){
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">_enemy</span> = obj;
  }
}

<span class="hljs-keyword">function</span> <span class="hljs-title function_">maou</span>(<span class="hljs-params"></span>) {  
  <span class="hljs-keyword">let</span> p1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Player</span> (<span class="hljs-string">'勇者'</span>, <span class="hljs-number">100</span>);
  <span class="hljs-keyword">let</span> p2 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Player</span> (<span class="hljs-string">'魔王'</span>, <span class="hljs-number">1000</span>);
  p1.<span class="hljs-property">enemy</span> = p2;
  p2.<span class="hljs-property">enemy</span> = p1;
  p1.<span class="hljs-title function_">atack</span>();
}
</code></pre>
<script>
    // <!--

    class Player{
      constructor(name, strength){
        this.name = name;
        this.strength = strength;
        this.lifeMax = 100000/strength;
        this.life = this.lifeMax;
      }

      damage(val){
        this.life = this.life - val;
        if (this.life < 0) {
          this.life = 0;
        }
        alert(this.name + 'は' + val + 'のダメージを受けた\n(´・ω・) '
         + this.life + '/' + this.lifeMax);
        if (this.life == 0) {
          alert(this.name + 'は倒れた！\n( -ω-) ｽﾔｧ');
        } else {
          this.atack();
        }
      }

      atack(){
        alert(this.name + 'の攻撃！')
        this.enemy.damage(Math.floor(Math.random() * this.strength));
      }

      get enemy(){
        return this._enemy;
      }

      set enemy(obj){
        this._enemy = obj;
      }
    }

    function maou() {
      
      let p1 = new Player ('勇者', 100);
      let p2 = new Player ('魔王', 1000);
      p1.enemy = p2;
      p2.enemy = p1;
      p1.atack();
    }

    // -->
</script>
<p>ボタンをクリックして<code>maou()</code>を呼び出します。</p>
<pre><code class="hljs language-html"><span class="hljs-tag">&#x3C;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"ここをクリック!"</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">"maou();"</span>></span>
</code></pre>2:["$","article",null,{"className":"mb-32 pt-6 lg:px-6","children":[[["$","h1",null,{"className":"text-5xl md:text-7xl lg:text-8xl font-bold tracking-tighter leading-tight md:leading-none mb-12 text-left","children":"クラスを自作する"}],["$","div",null,{"className":"mb-6 text-lg","children":["$","time",null,{"dateTime":"2024-10-26T00:00:00.000Z","children":"2024/10/26"}]}]],["$","div",null,{"className":"markdown-styles_markdown__ORfR8","dangerouslySetInnerHTML":{"__html":"$c"}}]]}]
b:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"クラスを自作する | VBScriptさんま屋"}],["$","meta","3",{"name":"description","content":"VBScriptの個人的なメモです"}],["$","meta","4",{"property":"og:title","content":"クラスを自作する"}],["$","meta","5",{"property":"og:description","content":"VBScriptの個人的なメモです"}],["$","meta","6",{"property":"og:image","content":"https://www.sammaya.jp/test/assets/img/stars.jpg"}],["$","meta","7",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","8",{"name":"twitter:title","content":"クラスを自作する"}],["$","meta","9",{"name":"twitter:description","content":"VBScriptの個人的なメモです"}],["$","meta","10",{"name":"twitter:image","content":"https://www.sammaya.jp/test/assets/img/stars.jpg"}]]
1:null
